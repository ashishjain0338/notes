"use strict";(self.webpackChunkreact_notes=self.webpackChunkreact_notes||[]).push([[289],{5259:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"React/Advanced/file-upload","title":"Upload File","description":"On a Button Click, we can allow the user to upload files as follows:","source":"@site/docs/React/Advanced/file-upload.md","sourceDirName":"React/Advanced","slug":"/React/Advanced/file-upload","permalink":"/react-notes/docs/React/Advanced/file-upload","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/React/Advanced/file-upload.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Download File","permalink":"/react-notes/docs/React/Advanced/file-download"},"next":{"title":"icon","permalink":"/react-notes/docs/React/Advanced/icon"}}');var o=t(4848),s=t(8453);const r={sidebar_position:5},l="Upload File",i={},d=[];function c(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"upload-file",children:"Upload File"})}),"\n",(0,o.jsx)(n.p,{children:"On a Button Click, we can allow the user to upload files as follows:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'import React, { useState } from "react";\nimport { Button, Form } from "react-bootstrap";\n\nconst Play = () => {\n  const [jsonData, setJsonData] = useState(null);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n\n    if (file && file.type === "application/json") {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        try {\n          // Parse the JSON data\n          const parsedData = JSON.parse(reader.result);\n          setJsonData(parsedData); // Store the parsed data in state\n        } catch (error) {\n          alert("Invalid JSON file");\n        }\n      };\n\n      reader.readAsText(file); // Read the file as text\n    } else {\n      alert("Please upload a valid JSON file");\n    }\n  };\n\n  return (\n    <div>\n      <Form>\n        {/* Hidden file input */}\n        <input\n          type="file"\n          accept=".json"\n          onChange={handleFileChange}\n          id="jsonFileInput"\n          style={{ display: "none" }} // Hide the default file input\n        />\n        {/* Custom button styled as "Load" */}\n        <Button \n          variant="primary" \n          onClick={() => document.getElementById(\'jsonFileInput\').click()} \n        >\n          Load\n        </Button>\n      </Form>\n      \n      {jsonData && (\n        <div>\n          <h3>Parsed JSON Data:</h3>\n          <pre>{JSON.stringify(jsonData, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport {Play};\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var a=t(6540);const o={},s=a.createContext(o);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);